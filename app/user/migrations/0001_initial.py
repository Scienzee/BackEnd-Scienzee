# Generated by Django 4.0.1 on 2022-01-26 17:08

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('base', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_area', models.CharField(max_length=200, verbose_name='Name of the Area')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation Time')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
                'ordering': ['name_area'],
            },
        ),
        migrations.CreateModel(
            name='PreferenceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name of preferred area')),
                ('creationTime', models.DateTimeField(auto_now_add=True, verbose_name='Creation Time')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AreaOfThePrerence', to='user.area')),
            ],
            options={
                'verbose_name': 'Area Of the Prefence',
                'verbose_name_plural': 'Area Of the Prefences',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(blank=True, max_length=194, null=True, verbose_name='Name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('email', models.EmailField(max_length=194, unique=True, verbose_name='E-mail')),
                ('academic_degree', models.CharField(blank=True, choices=[('EFI', 'Ensino fundamental incompleto'), ('EFC', 'Ensino fundamental completo'), ('EMI', 'Ensino médio incompleto'), ('EMC', 'Ensino médio completo'), ('ESI', 'Ensino superior incompleto'), ('ESC', 'Ensino superior completo')], max_length=30, null=True, verbose_name='Academic Degree')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='ProfilePicture/%y/%m/%d', verbose_name='Profile Picture')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='CoverPhoto/%y/%m/%d', verbose_name='Cover Photo')),
                ('descreption', models.TextField(blank=True, null=True, verbose_name='Descreption')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation Time')),
                ('deactivation_time', models.DateTimeField(blank=True, null=True, verbose_name='Deactivation Time')),
                ('is_active', models.BooleanField(default=True, verbose_name='User is active ')),
                ('is_staff', models.BooleanField(default=False, verbose_name='User is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='User is superuser')),
                ('area', models.ManyToManyField(to='user.Area')),
                ('area_preference', models.ManyToManyField(to='user.PreferenceArea')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CityOfTheUser', to='base.city')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ContryOfTheUser', to='base.country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StateOfTheUser', to='base.state')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
                'ordering': ['name'],
            },
            managers=[
                ('obejects', django.db.models.manager.Manager()),
            ],
        ),
    ]
